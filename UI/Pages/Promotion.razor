@page "/Promotion/{Id:int}"
@using BusinessLogic.DTOs
@using BusinessLogic.Exceptions
@using BusinessLogic.Services
@using DataAccess.Exceptions
@using DateRange
@using Domain.Exceptions
@using UI.Data
@inherits AuthEnforce
@inject UserController User
@inject NavigationManager NavigationManager
@inject PromotionService PromotionService
@inject NotificationService NotificationService

@code {
    private PromotionDto _promotionDto;
    private string _promotionLabel = string.Empty;

    private int? _id;

    [Parameter]
    public int Id
    {
        get => _id ?? throw new NullReferenceException();
        set => _id = value;
    }

    protected override void OnParametersSet()
    {
        try
        {
            var promotion = PromotionService.GetPromotion(Id);
            SetPromotionDto(promotion);
            SetPromotionLabel(promotion);
        }
        catch (Exception e)
        {
            HandleException(e);
        }

        StateHasChanged();
    }

    private void SetPromotionLabel(PromotionDto promotion)
    {
        _promotionLabel = promotion.Label;
    }

    private void SetPromotionDto(PromotionDto promotion)
    {
        _promotionDto = new PromotionDto
        {
            Id = Id,
            Label = promotion.Label,
            Discount = promotion.Discount,
            DateFrom = promotion.DateFrom,
            DateTo = promotion.DateTo
        };
    }

    private void ModifyPromotion()
    {
        try
        {
            PromotionService.ModifyPromotion(_promotionDto, User.CurrentCredentials);
            NotificationService.ShowMessage($"Promotion \"{_promotionLabel}\" modified successfully.");
        }
        catch (Exception e)
        {
            HandleException(e);
        }
    }

    private void DeletePromotion()
    {
        try
        {
            PromotionService.DeletePromotion(Id, User.CurrentCredentials);
            NotificationService.ShowMessage($"Promotion \"{_promotionLabel}\" deleted successfully.");
            NavigationManager.NavigateTo("/Promotions");
        }
        catch (Exception e)
        {
            HandleException(e);
        }
    }

    private void HandleException(Exception e)
    {
        if (e is DataAccessException)
        {
            NavigationManager.NavigateTo("/Logout");
            NotificationService.ShowError(e.Message);
        }
        else if (e is BusinessLogicException or DomainException or DateRangeException)
        {
            NotificationService.ShowError(e.Message);
            NavigationManager.NavigateTo("/Promotions");
        }
        else
        {
            NotificationService.ShowError("An unexpected error occurred.");
            NavigationManager.NavigateTo("/Promotions");
        }
    }

}

@if (!User.IsAdmin)
{
    <Forbidden/>
}
else
{
    <main class="responsive">
        <NavLink class="extra transparent vertical-margin left-align" href="/Promotions">
            <i>arrow_back</i>
        </NavLink>
        <h6 class="vertical-margin">
            Promotion
            <h6 class="button small primary no-wave">@_promotionLabel</h6>
        </h6>
        <article class="padding">
            <div class="field label border">
                <input type="text" @bind="_promotionDto.Label">
                <label>Label</label>
            </div>
            <div class="field label border">
                <input type="number" @bind="_promotionDto.Discount">
                <label>Discount (%)</label>
            </div>
            <div class="field label suffix border">
                <input type="date" @bind="_promotionDto.DateFrom">
                <label>From</label>
                <i>calendar_today</i>
            </div>
            <div class="field label suffix border no-margin">
                <input type="date" @bind="_promotionDto.DateTo">
                <label>To</label>
                <i>event_upcoming</i>
            </div>
        </article>
        <div class="small-space"></div>
        <div class="right-align">
            <button class="extend square round primary" @onclick="ModifyPromotion">
                <i>edit</i>
                <span>Modify</span>
            </button>
            <button class="extend square round error no-margin" @onclick="DeletePromotion">
                <i>delete</i>
                <span>Delete</span>
            </button>
        </div>
    </main>
}