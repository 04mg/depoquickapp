@page "/Deposit/{Name}"
@using BusinessLogic.DTOs
@using BusinessLogic.Services
@using UI.Data
@using UI.Pages.Components
@inherits AuthEnforce
@inject UserController User
@inject DepositService DepositService
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService

@code {
    private DepositDto DepositDto { get; set; }
    private List<PromotionDto> Promotions { get; set; } = new();

    private string? _name;

    [Parameter]
    public string Name
    {
        get => _name ?? throw new NullReferenceException();
        set => _name = value;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender) return;
        try
        {
            DepositDto = DepositService.GetDeposit(Name);
            Promotions = DepositDto.Promotions;
        }
        catch (InvalidOperationException)
        {
            NotificationService.ShowError("Deposit was not found.");
            NavigationManager.NavigateTo("/Deposits");
        }

        StateHasChanged();
    }

    private void DeleteDeposit()
    {
        try
        {
            DepositService.DeleteDeposit(Name, User.CurrentCredentials);
            NotificationService.ShowMessage($"Deposit '{Name}' deleted successfully.");
            NavigationManager.NavigateTo("/Deposits");
        }
        catch (ArgumentException e)
        {
            NotificationService.ShowError(e.Message);
        }
    }

}

<main class="responsive">
    <NavLink class="extra transparent vertical-margin left-align" href="/Deposits">
        <i>arrow_back</i>
    </NavLink>
    <h6 class="vertical-margin">
        Deposit
        <span class="button inverse-primary center-align middle-align left-margin">@Name</span>
        @if (User.IsAdmin)
        {
            <button class="extend square round error no-margin absolute right" @onclick="DeleteDeposit">
                <i>delete</i>
                <span>Delete</span>
            </button>
            <div class="medium-space"></div>
        }
    </h6>
    <article>
        <h6 class="small padding">Name:&nbsp; <b>@DepositDto.Name</b></h6>
        <div class="divider"></div>
        <h6 class="small padding">Area:&nbsp; <b>@DepositDto.Area</b></h6>
        <div class="divider"></div>
        <h6 class="small padding">Size:&nbsp; <b>@DepositDto.Size</b></h6>
        <div class="divider"></div>
        <h6 class="small padding">Climate Control:&nbsp; <b>@(DepositDto.ClimateControl ? "Yes" : "No")</b></h6>
        <div class="divider"></div>
        @if (Promotions.Count == 0)
        {
            <h6 class="small padding">There are no available promotions for this deposit</h6>
        }
        else
        {
            <h6 class="small padding">There are the following promotions available for this deposit:</h6>
            @foreach (var promotion in Promotions)
            {
                <div class="button no-wave margin">
                    @promotion.Label
                    <div class="badge none">-@promotion.Discount%</div>
                </div>
            }
        }
    </article>
    <div class="small-space"></div>
    <h6 class="vertical-margin">Book now</h6>
    <DepositBooking DepositName="@Name"/>
</main>